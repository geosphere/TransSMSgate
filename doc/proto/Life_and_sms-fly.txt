SMS-HTTP: Описание протокола
Данный документ является описанием протокола взаимодействия программного обеспечения компаний-партнеров с SMS-HTTP  платформой в рамках проекта SMS-HTTP. Протокол обеспечивает программному обеспечению партнеров следующие возможности:
•	отправку коротких сообщений (SMS) мобильным абонентам;
•	автоматическое и ручное получение информации о статусе отосланных сообщений;
•	получение текущего баланса.
Существенными целями при разработке данного протокола являлись:
•	гибкость и расширяемость;
•	простота реализации;
•	отсутствие необходимости в сложном программном обеспечении со стороны партнеров.
Исходя из указанных целей, в качестве основы для протокола был выбран обмен XML-сообщениями через протокол HTTP. Наличие большого количества готовых средств генерации и обработки XML, а также простая структура протокола делают реализацию клиентской части не очень сложной.
Протокол опирается на стандартную модель "клиент-сервер", причем в качестве клиента выступает программное обеспечение партнера, а в качестве сервера - SMS-HTTP-платформа. В последующих разделах мы будем для краткости использовать термины "клиент" и "сервер" именно в этом смысле.
В случае отсылки сообщений, клиент посылает серверу запрос, содержащий как собственно сообщение, так и сопутствующую информацию. В ответ, сервер инициирует отсылку сообщения и возвращает статус завершения операции. Также сервер возвращает уникальный идентификатор сообщения для последующих ссылок со стороны клиента. В случае выяснения статуса отосланного сообщения, клиент посылает серверу запрос, содержащий полученный ранее уникальный идентификатор сообщения. В ответ, сервер возвращает клиенту текущий статус сообщения.
Следующий раздел данного документа содержит описание взаимодействия клиента и сервера на нижнем уровне (уровне HTTP). Последующие два раздела подробно описывают два основных типа запросов.
Обмен между сервером и клиентом производится с использованием протокола HTTP. Данные передаются в виде XML документов. От клиента к серверу передаются XML-документы, которые содержат SMS-сообщения. От сервера к клиенту передаются XML-документы, которые содержат информацию о состоянии сообщений.

Аутентификация производится с использованием HTTP Basic Authentication.
Для передачи сообщений используется метод POST протокола HTTP.

Отправка SMS-сообщения.
Для отправки SMS-сообщения, клиент присылает запрос следующего формата:

<?xml version="1.0" encoding="utf-8"?>
<request>
<operation>SENDSMS</operation>
<message start_time="2012-01-26 14:12:55" end_time="2012-01-26 14:12:55" livetime="4" rate="120" desc="My first message" source="ALFANAME">
<body>message text</body> 
<recipient>380501234567</recipient>
</message>
</request>

start_time – задает время начала отправки сообщения(й) ,  в формате YYYY-MM-DD HH:MM:SS и не может быть временем в прошлом. Система допускает поправку времени в 5 минут.  (формат для PHP “Y-m-d H:i:s”). Можно использовать значение AUTO для отправки немедленно.
end_time – задает время окончания отправки сообщения(й),  в формате YYYY-MM-DD HH:MM:SS и не может быть раньше времени начала отправки. (формат для PHP “Y-m-d H:i:s”). Можно использовать значение AUTO для автоматического расчета времени системой.
livetime  – задает срок жизни сообщения(й) в часах.  Допускаются только целые значения в диапазоне от 1 до 24.
rate – задает скорость отправки сообщения(й) в количестве сообщений в минуту. Допускаются только целые значения в диапазоне от 1 до 120.
desc – задает описание рассылки (отображается в веб интерфейсе) в кодировке utf-8.
source – отправитель. Задает альфанумерическое имя (альфаимя). Допускаются только альфанумерические имена, зарегистрированные для пользователя.
В тег <body> заключается текст смс-сообщения в кодировке utf-8.
В тег <recipient> заключается номер получателя в международном формате без разделителей (пример: 380631234567)
При отправке сообщений группе абонентов запрос может содержать несколько получателей, каждый из которых должен быть заключен в отдельный тег <recipient>. Пример:

<?xml version="1.0" encoding="utf-8"?>
<request>
<operation>SENDSMS</operation>
<message start_time="2012-01-26 14:12:55" end_time="2012-01-26 14:12:55" livetime="4" rate="120" desc="My first message" source="ALFANAME">
<body>message text</body> 
<recipient>380501234567</recipient>
<recipient>380631234567</recipient>
<recipient>380931234567</recipient>
<recipient>380671234567</recipient>
</message>
</request>

Также поддерживается отправка индивидуального текста группе абонентов одним запросом. Для создания такой рассылки необходимо в тег <message> добавить параметр  type="individual". Далее вы можете чередовать теги <body> и <recipient>. Системой, в порядке очередности будут сопоставлены номера телефонов получателей и текст для этих получателей. Пример:

<?xml version="1.0" encoding="utf-8"?>
<request>
<operation>SENDSMS</operation>
<message start_time="AUTO" end_time="AUTO" livetime="4" rate="120" desc="My first individual campaign" source="SMS" type="individual">
<recipient>380501234567</recipient>
<body>message text for 380501234567</body> 
<recipient>380991234567</recipient>
<body>message text for 380991234567</body> 
<recipient>380631234567</recipient>
<body>message text for 380631234567</body> 
<recipient>380931234567</recipient>
<body>message text for 380931234567</body> 
<recipient>380671234567</recipient>
<body>message text for 380671234567</body> 
</message>
</request>

В ответ на запрос клиента, сервер отправляет HTTP Response с XML-документом, который содержит статус сообщения. Клиент обязан обрабатывать ответы HTTP-сервера, даже если статус сообщения указывает на ошибку.
Пример ответа:

<?xml version="1.0" encoding="utf-8"?>
<message>
<state code="ACCEPT" campaignID="4124" date="2012-01-24 12:48:32">The campaign has been successfully processed and added to the queue for delivery</state>
<to recipient="380631234567" status="ACCEPTED" />
<to recipient="380931234567" status="ACCEPTED" />
<to recipient="380501234567" status="ACCEPTED" />
<to recipient="380661234567" status="ACCEPTED" />
</message>

В случае ошибки система генерирует ответ вида:

<?xml version="1.0" encoding="utf-8"?>
<message>
<state code="ERRSTARTTIME" date="2012-01-24 12:48:32">Incorrect start time</state>
</message>

Расшифровка статусов code:
ACCEPT – сообщение принято системой и поставлено в очередь на формирование рассылки.
XMLERROR – Некорректный XML .
ERRPHONES – Неверно задан номер получателя.
ERRSTARTTIME – не корректное время начала отправки.
ERRENDTIME – не корректное время окончания рассылки.
ERRLIVETIME – не корректное время жизни сообщения.
ERRSPEED – не корректная скорость отправки сообщений.
ERRALFANAME – данное альфанумерическое имя использовать запрещено, либо ошибка .
ERRTEXT – некорректный текст сообщения.

Дополнительные реквизиты:
campaignID – идентификатор рассылки в системе.
date –дата и время постановки в очередь задания.
тег <to> содержит:
recipient – получатель.
status – статус принятия системой конкретного получателя (ACCEPTED, ERROR).

После того как статусы всех частей сообщения будут известны система генерирует отчет о состоянии сообщения и отправляет его на HTTP-сервер клиента (опционально, если клиент предоставил соответствующую ссылку).
Формат отчета о состоянии сообщения:

<?xml version="1.0" encoding="utf-8"?>
<status>
<state campaignID="4125" recipient="380631234567" status="DELIVERED" date=”2012-01-25 14:31:33” /> </status>

Расшифровка статусов:
DELIVERED – все части сообщения успешно доставлены получателю;
EXPIRED – Срок жизни сообщения вышел, сообщения не доставлено получателю.
UNDELIV – Сообщение не может быть доставлено. Чаще всего эта ошибка возникает, когда номер абонента не верен, либо абонент отключен.
ALFANAMELIMITED – Сообщение не может быть отправлено абоненту Life :), так как Альфаимя ограничено.
STOPED – Сообщение остановлено системой. Чаще всего это происходит, если у клиента недостаточно средств для отправки сообщения.
USERSTOPED – Сообщение остановлено пользователем через WEB интерфейс. 
ERROR – Системная ошибка при отправке сообщения.
PENDING – Сообщение в очереди на отправку.
SENT – Сообщение отправлено абоненту. Ожидается статус сообщения от оператора.

Проверка статусов сообщений.
Клиент может самостоятельно запрашивать статусы сообщений по своим рассылкам. Для этого, клиент присылает запрос следующего формата:

<?xml version="1.0" encoding="utf-8"?>
<request>
<operation>GETMESSAGESTATUS</operation>
<message campaignID='1234' recipient='380501234567' />
</request>

В ответ на запрос, сервер отправляет HTTP Response с XML-документом, который содержит статус сообщения. Пример ответа:

<?xml version="1.0" encoding="utf-8"?>
<message>
	<state campaignID="1234" recipient="380501234567" status="DELIVERED" date="2012-01-26 09:59:32"></state>
</message>

Проверка баланса.
Клиент может самостоятельно запрашивать состояние своего счета. Для этого, клиент присылает запрос следующего формата:

<?xml version="1.0" encoding="utf-8"?>
<request>
<operation>GETBALANCE</operation>
</request>

В ответ на запрос, сервер отправляет HTTP Response с XML-документом, в котором указывается текущий баланс клиента. Пример ответа:

<?xml version="1.0" encoding="utf-8"?>
<message>
	<balance>123.156</balance>
</message>

Пример реализации на PHP.
Отправка одного сообщения:
<?php
// iconv используетс для корректного перекодирования кириллических сообщений в UTF-8
// для тех, кто изначально работает с UTF-8 ¬преобразование делать не нужно.

$text = iconv('windows-1251', 'utf-8', htmlspecialchars('Заметьте, что когда герой фильма подписывает договор с Сатаной, он не подписывает копию договора и не получает ее.'));
$description = iconv('windows-1251', 'utf-8', htmlspecialchars('Моя первая рассылка'));
$start_time = date("Y-m-d H:i:s");
$end_time = date("Y-m-d H:i:s", time() + 10800); // плюс 3 часа
$rate = 120;
$livetime = 4;
$source = 'Test'; // Alfaname
$recipient = '380501234567';
$user = 'user';
$password = 'password';

$myXML 	 = "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n";
$myXML 	.= "<request>";
$myXML 	.= "<operation>SENDSMS</operation>";
$myXML 	.= '		<message start_time="'.$start_time.'" end_time="'.$end_time.'" livetime="'.$livetime.'" rate="'.$rate.'" desc="'.$description.'" source="'.$source.'">'."\n";
$myXML 	.= "		<body>".$text."</body>";
$myXML 	.= "		<recipient>".$recipient."</recipient>";
$myXML 	.=  "</message>";
$myXML 	.= "</request>";

$ch = curl_init();
curl_setopt($ch, CURLOPT_USERPWD , $user.':'.$password);
curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);
curl_setopt($ch, CURLOPT_POST, 1);
curl_setopt($ch, CURLOPT_URL, 'http://sms-fly.com/api/api.php');
curl_setopt($ch, CURLOPT_HTTPHEADER, array("Content-Type: text/xml", "Accept: text/xml"));
curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
curl_setopt($ch, CURLOPT_POSTFIELDS, $myXML);
$response = curl_exec($ch);
curl_close($ch);

// вывод результата в браузер для удобства чтения обрамлен в textarea
echo '<textarea spellcheck="false" name="111" rows="25" cols="150">';
echo $response;
echo '</textarea>';;
?>

Параметры авторизации.
Интерфейс взаимодействия: http://sms-fly.com/api/api.php
Логин и пароль аналогичны, что и для доступа в web интерфейс системы.
